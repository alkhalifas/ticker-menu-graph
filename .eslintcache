[{"C:\\Users\\Saleh Alkhalifa\\Documents\\GitHub\\ticker-menu-graph\\src\\index.js":"1","C:\\Users\\Saleh Alkhalifa\\Documents\\GitHub\\ticker-menu-graph\\src\\App.js":"2","C:\\Users\\Saleh Alkhalifa\\Documents\\GitHub\\ticker-menu-graph\\src\\reportWebVitals.js":"3","C:\\Users\\Saleh Alkhalifa\\Documents\\GitHub\\ticker-menu-graph\\src\\Home\\Home.js":"4","C:\\Users\\Saleh Alkhalifa\\Documents\\GitHub\\ticker-menu-graph\\src\\Services\\ticker-service.js":"5","C:\\Users\\Saleh Alkhalifa\\Documents\\GitHub\\ticker-menu-graph\\src\\Graph1\\Graph1.js":"6","C:\\Users\\Saleh Alkhalifa\\Documents\\GitHub\\ticker-menu-graph\\src\\Graph1\\Chart.js":"7","C:\\Users\\Saleh Alkhalifa\\Documents\\GitHub\\ticker-menu-graph\\src\\Graph1\\utils.js":"8"},{"size":536,"mtime":1608845495512,"results":"9","hashOfConfig":"10"},{"size":528,"mtime":499162500000,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":499162500000,"results":"12","hashOfConfig":"10"},{"size":2488,"mtime":1608854548142,"results":"13","hashOfConfig":"10"},{"size":413,"mtime":1608846419891,"results":"14","hashOfConfig":"10"},{"size":756,"mtime":1608849507471,"results":"15","hashOfConfig":"10"},{"size":2625,"mtime":1608849010505,"results":"16","hashOfConfig":"10"},{"size":671,"mtime":1608849082224,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20","usedDeprecatedRules":"21"},"smqzzx",{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"21"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"21"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"21"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"40"},"C:\\Users\\Saleh Alkhalifa\\Documents\\GitHub\\ticker-menu-graph\\src\\index.js",["41"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Home} from \"./Home/Home\";\n\nReactDOM.render(\n  <React.StrictMode>\n      <Home/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["42","43"],"C:\\Users\\Saleh Alkhalifa\\Documents\\GitHub\\ticker-menu-graph\\src\\App.js",[],"C:\\Users\\Saleh Alkhalifa\\Documents\\GitHub\\ticker-menu-graph\\src\\reportWebVitals.js",[],"C:\\Users\\Saleh Alkhalifa\\Documents\\GitHub\\ticker-menu-graph\\src\\Home\\Home.js",["44","45"],"import React from \"react\";\r\nimport {BrowserRouter, Router, Link} from \"react-router-dom\";\r\nimport {getPrices3Months} from \"../Services/ticker-service\"\r\nimport \"./Home.css\"\r\nimport {Graph1} from \"../Graph1/Graph1\";\r\n\r\nexport class Home extends React.Component {\r\n    state = {\r\n        priceHistory: [],\r\n        tickers: [\"AMGN\", \"W\", \"FB\", \"GOOG\", \"BIIB\", \"PFE\", \"MSFT\", \"AMD\"],\r\n        tickerId: \"AMGN\",\r\n    }\r\n\r\n    componentDidMount() {\r\n        // const tickerId = this.props.match.params.tickerId\r\n        getPrices3Months(\"amgn\") //todo: need to change to: this.props.match.params.tickerId\r\n            .then(priceHistory => {\r\n                this.setState({\r\n                    priceHistory: priceHistory\r\n                })\r\n            })\r\n    }\r\n\r\n    // componentDidUpdate(prevProps, prevState, snapshot) {\r\n    //     const tickerId = this.props.match.params.moduleId\r\n    // }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container-fluid container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-lg-3 col-sm-12\">\r\n                        <h1>Ticker List:</h1>\r\n                        <ul className=\"list-group\">\r\n\r\n                            {\r\n                                this.state.tickers.map(ticker =>\r\n                                    <li\r\n                                        key={ticker}\r\n                                        className=\"list-group-item\">\r\n                                            <Link to={`/tickers/${ticker}`}>\r\n                                                {ticker}\r\n                                            </Link>\r\n\r\n\r\n                                    </li>\r\n                                )\r\n                            }\r\n                            <li className=\"list-group-item\">\r\n                                <button className=\"btn btn-primary\">Add + </button>\r\n                            </li>\r\n                        </ul>\r\n\r\n                    </div>\r\n                    <div className=\"col-lg-9 col-sm-12\">\r\n                        <h1>Graph:</h1>\r\n                        console.log(this.props)\r\n                        {/*<h1>Graph: {this.props.match.params.tickerId}</h1>*/}\r\n                        {console.log(\"PH: \", this.state.priceHistory)}\r\n                        {console.log(\"State: \", this.state)}\r\n                        <Graph1/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}","C:\\Users\\Saleh Alkhalifa\\Documents\\GitHub\\ticker-menu-graph\\src\\Services\\ticker-service.js",["46"],"const STOCK_URL_START = 'https://cloud.iexapis.com/stable/stock/';\r\nconst STOCK_URL_END = '/chart/1m?token=pk_8c5bd128eeab4bec97784baa1d133b30';\r\n\r\nconst FULL_PRICE_URL = 'https://cloud.iexapis.com/stable/stock/amgn/chart/1m?token=pk_8c5bd128eeab4bec97784baa1d133b30'\r\n\r\nexport const getPrices3Months = (ticker) =>\r\n    fetch(STOCK_URL_START + ticker + STOCK_URL_END)\r\n        .then(response => response.json())\r\n","C:\\Users\\Saleh Alkhalifa\\Documents\\GitHub\\ticker-menu-graph\\src\\Graph1\\Graph1.js",["47"],"import React from 'react';\r\nimport { render } from 'react-dom';\r\nimport Chart from './Chart';\r\nimport { getData } from \"./utils\"\r\nimport { TypeChooser } from \"react-stockcharts/lib/helper\";\r\n\r\n// https://codesandbox.io/s/github/rrag/react-stockcharts-examples2/tree/master/examples/AreaChart?file=/src/utils.js:0-579\r\n\r\nexport class Graph1 extends React.Component {\r\n    componentDidMount() {\r\n        getData().then(data => {\r\n            this.setState({ data })\r\n        })\r\n    }\r\n    render() {\r\n        if (this.state == null) {\r\n            return <div>Loading...</div>\r\n        }\r\n        return (\r\n            <TypeChooser>\r\n                {type => <Chart type={type} data={this.state.data} />}\r\n            </TypeChooser>\r\n        )\r\n    }\r\n}\r\n\r\n","C:\\Users\\Saleh Alkhalifa\\Documents\\GitHub\\ticker-menu-graph\\src\\Graph1\\Chart.js",[],"C:\\Users\\Saleh Alkhalifa\\Documents\\GitHub\\ticker-menu-graph\\src\\Graph1\\utils.js",["48"],"\r\n\r\nimport { tsvParse, csvParse } from  \"d3-dsv\";\r\nimport { timeParse } from \"d3-time-format\";\r\n\r\nfunction parseData(parse) {\r\n    return function(d) {\r\n        d.date = parse(d.date);\r\n        d.open = +d.open;\r\n        d.high = +d.high;\r\n        d.low = +d.low;\r\n        d.close = +d.close;\r\n        d.volume = +d.volume;\r\n\r\n        return d;\r\n    };\r\n}\r\n\r\nconst parseDate = timeParse(\"%Y-%m-%d\");\r\n\r\nexport function getData() {\r\n    const promiseMSFT = fetch(\"https://cdn.rawgit.com/rrag/react-stockcharts/master/docs/data/MSFT.tsv\")\r\n        .then(response => response.text())\r\n        .then(data => tsvParse(data, parseData(parseDate)))\r\n    return promiseMSFT;\r\n}\r\n",["49","50"],{"ruleId":"51","severity":1,"message":"52","line":4,"column":8,"nodeType":"53","messageId":"54","endLine":4,"endColumn":11},{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","replacedBy":"58"},{"ruleId":"51","severity":1,"message":"59","line":2,"column":9,"nodeType":"53","messageId":"54","endLine":2,"endColumn":22},{"ruleId":"51","severity":1,"message":"60","line":2,"column":24,"nodeType":"53","messageId":"54","endLine":2,"endColumn":30},{"ruleId":"51","severity":1,"message":"61","line":4,"column":7,"nodeType":"53","messageId":"54","endLine":4,"endColumn":21},{"ruleId":"51","severity":1,"message":"62","line":2,"column":10,"nodeType":"53","messageId":"54","endLine":2,"endColumn":16},{"ruleId":"51","severity":1,"message":"63","line":3,"column":20,"nodeType":"53","messageId":"54","endLine":3,"endColumn":28},{"ruleId":"55","replacedBy":"64"},{"ruleId":"57","replacedBy":"65"},"no-unused-vars","'App' is defined but never used.","Identifier","unusedVar","no-native-reassign",["66"],"no-negated-in-lhs",["67"],"'BrowserRouter' is defined but never used.","'Router' is defined but never used.","'FULL_PRICE_URL' is assigned a value but never used.","'render' is defined but never used.","'csvParse' is defined but never used.",["66"],["67"],"no-global-assign","no-unsafe-negation"]